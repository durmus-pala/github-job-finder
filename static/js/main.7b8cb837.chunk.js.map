{"version":3,"sources":["assets/job-logo.svg","components/header/Header.js","components/form/Form.js","components/jobcard/JobCard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","Img","alt","Form","setData","description","useRef","location","action","ref","type","name","id","placeholder","onClick","axios","get","current","value","then","res","console","log","data","catch","JobCard","title","logo","url","href","App","useState","querryResult","setQuerryResult","map","querry","index","company_logo","company_url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAAe,MAA0B,qC,eCI1B,SAASA,IACtB,OACE,qBAAKC,UAAU,SAAf,SACE,qBAAKC,IAAKC,EAAKC,IAAI,O,2BCHV,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QACvBC,EAAcC,mBACdC,EAAWD,mBAcjB,OACE,qBAAKP,UAAU,OAAf,SACE,uBAAMS,OAAO,GAAb,UACE,mDACA,uBACEC,IAAKJ,EACLK,KAAK,OACLC,KAAK,GACLC,GAAG,OACHC,YAAY,gBAEd,uBACA,uBACEJ,IAAKF,EACLG,KAAK,OACLC,KAAK,GACLC,GAAG,MACHC,YAAY,aAEd,uBACA,wBAAQd,UAAU,UAAUe,QAjChB,WAChBC,IACGC,IADH,uCAEoCX,EAAYY,QAAQC,MAFxD,qBAE0EX,EAASU,QAAQC,QAExFC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZhB,EAAQgB,EAAIG,SAEbC,OAAM,WACLH,QAAQC,IAAI,gCAuBoCZ,KAAK,SAArD,yB,MCrCO,SAASe,EAAT,GAAwD,IAArCC,EAAoC,EAApCA,MAAOhB,EAA6B,EAA7BA,KAAMH,EAAuB,EAAvBA,SAAUoB,EAAa,EAAbA,KAAMC,EAAO,EAAPA,IAG7D,OACE,sBAAK7B,UAAU,UAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKC,IAAa,MAAR2B,EAAeA,EAJ7B,4JAIiDzB,IAAI,KAAM,OAEzD,oBAAIH,UAAU,MAAd,SAAqB2B,IACrB,6BAAKnB,IACL,6BAAKG,IAEL,mBAAGmB,KAAMD,EAAT,SACE,wBAAQ7B,UAAU,UAAUW,KAAK,SAAjC,wB,MCVO,SAASoB,IAAO,IAAD,EACYC,mBAAS,IADrB,mBACrBC,EADqB,KACPC,EADO,KAE5B,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,IACC,cAAC,EAAD,CAAMK,QAAS6B,IAFlB,OAGGD,QAHH,IAGGA,OAHH,EAGGA,EAAcE,KAAI,SAACC,EAAQC,GAAT,OACjB,cAAC,EAAD,CACEV,MAAOS,EAAOT,MACdhB,KAAMyB,EAAOzB,KACbH,SAAU4B,EAAO5B,SACjBoB,KAAMQ,EAAOE,aACbT,IAAKO,EAAOG,aACPF,SCnBf,IAYeG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7b8cb837.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/job-logo.bb022661.svg\";","import React from \"react\";\r\nimport Img from \"../../assets/job-logo.svg\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <img src={Img} alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport \"./Form.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Form({ setData }) {\r\n  const description = useRef();\r\n  const location = useRef();\r\n  const newQuerry = () => {\r\n    axios\r\n      .get(\r\n        `./positions.json?description=${description.current.value}&location=${location.current.value}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        setData(res.data);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Data alınamadı\");\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"form\">\r\n      <form action=\"\">\r\n        <h1>GITHUB JOB FINDER</h1>\r\n        <input\r\n          ref={description}\r\n          type=\"text\"\r\n          name=\"\"\r\n          id=\"desc\"\r\n          placeholder=\"DESCRIPTION\"\r\n        />\r\n        <br />\r\n        <input\r\n          ref={location}\r\n          type=\"text\"\r\n          name=\"\"\r\n          id=\"loc\"\r\n          placeholder=\"LOCATION\"\r\n        />\r\n        <br />\r\n        <button className=\"src-btn\" onClick={newQuerry} type=\"button\">\r\n          SEARCH\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./JobCard.css\";\r\n\r\nexport default function JobCard({ title, type, location, logo, url }) {\r\n  const defaultLogo =\r\n    \"https://images.unsplash.com/photo-1542744173-8e7e53415bb0?ixid=MnwxMjA3fDB8MHxzZWFyY2h[…]wwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\";\r\n  return (\r\n    <div className=\"jobcard\">\r\n      <div className=\"top-logo\">\r\n        <img src={logo != null ? logo : defaultLogo} alt=\"\" />{\" \"}\r\n      </div>\r\n      <h2 className=\"job\">{title}</h2>\r\n      <h3>{location}</h3>\r\n      <h4>{type}</h4>\r\n\r\n      <a href={url}>\r\n        <button className=\"app-btn\" type=\"button\">\r\n          APPLY\r\n        </button>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/header/Header.js\";\nimport Form from \"./components/form/Form.js\";\nimport JobCard from \"./components/jobcard/JobCard.js\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [querryResult, setQuerryResult] = useState([]);\n  return (\n    <div className=\"App\">\n      <Header />\n      {<Form setData={setQuerryResult} />}\n      {querryResult?.map((querry, index) => (\n        <JobCard\n          title={querry.title}\n          type={querry.type}\n          location={querry.location}\n          logo={querry.company_logo}\n          url={querry.company_url}\n          key={index}\n        />\n      ))}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}